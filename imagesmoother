
class Solution {
public:
    vector<vector<int>> imageSmoother(vector<vector<int>>& img) {
        int m = img.size(), n = img[0].size();
        vector<vector<int>> result(m, vector<int>(n, 0));
        
        // Directions to traverse 3x3 grid around each cell
        int directions[9][2] = {{-1, -1}, {-1, 0}, {-1, 1},
                                {0, -1},  {0, 0},  {0, 1},
                                {1, -1},  {1, 0},  {1, 1}};

        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                int sum = 0, count = 0;
                
                // Traverse 3x3 grid around (i, j)
                for (auto& dir : directions) {
                    int ni = i + dir[0], nj = j + dir[1];

                    if (ni >= 0 && ni < m && nj >= 0 && nj < n) { 
                        sum += img[ni][nj];
                        count++;
                    }
                }
                
                result[i][j] = sum / count; 
            }
        }
        return result;
    }
};
